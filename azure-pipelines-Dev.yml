# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
  branches:
    include:
    - master

pool:
  vmImage: 'macos-13'

variables:
  - name: bundleIdMainApp
    value: 'com.7peakssoftware.cinerater.CineRater'
  - name: profileUUIDMainApp
    value: 'bd46b52f-681e-4ed5-a885-888feb2fd660'
  - name: latestBuildNumber  
    value: $[counter('DEV', 129)]
  - name: teamId
    value: 'YE28Y3LX8V'

steps:
- task: InstallAppleCertificate@2
  displayName: "Install an Apple certificate required to build on a macOS agent machine"
  inputs:
    certSecureFile: 'YE28Y3LX8V.p12'
    certPwd: '7Peaks!'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  displayName: "Install an Apple provisioning profile required to build on a macOS agent machine"
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'CineRater.mobileprovision'

- task: PowerShell@2
  displayName: 'Install tools'
  inputs:
    targetType: 'inline'
    script: |
      brew install rswift && bundle install

#- task: PowerShell@2
#  displayName: 'Unit test & Code coverage'
#  inputs:
#    targetType: 'inline'
#    script: |
#      bundle exec fastlane generate_code_coverage

#- task: SonarCloudPrepare@1
#  displayName: 'Prepare SonarCloud analysis configuration'
#  inputs:
#    SonarCloud: 'CineRater_Service'
#    organization: 'sawpyaeyadanar'
#    scannerMode: 'CLI'
#    configMode: 'file'

#- task: SonarCloudAnalyze@1

#- task: SonarCloudPublish@1
#  inputs:
#    pollingTimeoutSec: '300'

#- task: PowerShell@2
#  displayName: 'Update the build number'
#  inputs:
#    targetType: 'inline'
#    script: |
#      cd CineRater && xcrun agvtool new-version -all '$(latestBuildNumber)'

- script: |
    COMMIT_MESSAGES=$(git log --pretty=%B develop)
    echo "##vso[task.setvariable variable=COMMIT_MESSAGES;isOutput=true]$COMMIT_MESSAGES"
  displayName: 'Extract Commit Messages'


- script: |
      echo "Commit Messages: $(COMMIT_MESSAGES)"
      # Use COMMIT_MESSAGES in your subsequent tasks
  displayName: 'Display Commit Messages'
